/* Generated By:JavaCC: Do not edit this line. MiniIRParserConstants.java */

/**
 * Token literal values and constants.
 * Generated by org.javacc.parser.OtherFilesGen#start()
 */
public interface MiniIRParserConstants {

  /** End of File. */
  int EOF = 0;
  /** RegularExpression Id. */
  int SINGLE_LINE_COMMENT = 6;
  /** RegularExpression Id. */
  int FORMAL_COMMENT = 7;
  /** RegularExpression Id. */
  int MULTI_LINE_COMMENT = 8;
  /** RegularExpression Id. */
  int LPAREN = 9;
  /** RegularExpression Id. */
  int RPAREN = 10;
  /** RegularExpression Id. */
  int LBRACE = 11;
  /** RegularExpression Id. */
  int RBRACE = 12;
  /** RegularExpression Id. */
  int LSQPAREN = 13;
  /** RegularExpression Id. */
  int RSQPAREN = 14;
  /** RegularExpression Id. */
  int DOT = 15;
  /** RegularExpression Id. */
  int LE = 16;
  /** RegularExpression Id. */
  int NE = 17;
  /** RegularExpression Id. */
  int PLUS = 18;
  /** RegularExpression Id. */
  int MINUS = 19;
  /** RegularExpression Id. */
  int TIMES = 20;
  /** RegularExpression Id. */
  int DIV = 21;
  /** RegularExpression Id. */
  int MAIN = 22;
  /** RegularExpression Id. */
  int CODE = 23;
  /** RegularExpression Id. */
  int HALLOCATE = 24;
  /** RegularExpression Id. */
  int END = 25;
  /** RegularExpression Id. */
  int NOOP = 26;
  /** RegularExpression Id. */
  int MOVE = 27;
  /** RegularExpression Id. */
  int CALL = 28;
  /** RegularExpression Id. */
  int ERROR = 29;
  /** RegularExpression Id. */
  int PRINT = 30;
  /** RegularExpression Id. */
  int BEGIN = 31;
  /** RegularExpression Id. */
  int RETURN = 32;
  /** RegularExpression Id. */
  int JUMP = 33;
  /** RegularExpression Id. */
  int CJUMP = 34;
  /** RegularExpression Id. */
  int HSTORE = 35;
  /** RegularExpression Id. */
  int HLOAD = 36;
  /** RegularExpression Id. */
  int MEM = 37;
  /** RegularExpression Id. */
  int TEMP = 38;
  /** RegularExpression Id. */
  int ARG = 39;
  /** RegularExpression Id. */
  int INTEGER_LITERAL = 40;
  /** RegularExpression Id. */
  int IDENTIFIER = 41;
  /** RegularExpression Id. */
  int LETTER = 42;
  /** RegularExpression Id. */
  int DIGIT = 43;

  /** Lexical state. */
  int DEFAULT = 0;

  /** Literal token values. */
  String[] tokenImage = {
    "<EOF>",
    "\" \"",
    "\"\\t\"",
    "\"\\n\"",
    "\"\\r\"",
    "\"\\f\"",
    "<SINGLE_LINE_COMMENT>",
    "<FORMAL_COMMENT>",
    "<MULTI_LINE_COMMENT>",
    "\"(\"",
    "\")\"",
    "\"{\"",
    "\"}\"",
    "\"[\"",
    "\"]\"",
    "\".\"",
    "\"LE\"",
    "\"NE\"",
    "\"PLUS\"",
    "\"MINUS\"",
    "\"TIMES\"",
    "\"DIV\"",
    "\"MAIN\"",
    "\"CODE\"",
    "\"HALLOCATE\"",
    "\"END\"",
    "\"NOOP\"",
    "\"MOVE\"",
    "\"CALL\"",
    "\"ERROR\"",
    "\"PRINT\"",
    "\"BEGIN\"",
    "\"RETURN\"",
    "\"JUMP\"",
    "\"CJUMP\"",
    "\"HSTORE\"",
    "\"HLOAD\"",
    "\"MEM\"",
    "\"TEMP\"",
    "\"ARG\"",
    "<INTEGER_LITERAL>",
    "<IDENTIFIER>",
    "<LETTER>",
    "<DIGIT>",
  };

}
